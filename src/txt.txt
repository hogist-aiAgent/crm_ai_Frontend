// import { useState, useEffect } from "react";
// import { FaArrowDown, FaArrowUp, FaFilter } from "react-icons/fa";
// import * as XLSX from "xlsx";
// import { saveAs } from "file-saver";

// export const B2B = () => {
//     const [tableData, setTableData] = useState([]);
//     const [loading, setLoading] = useState(true);
//     const [error, setError] = useState(null);
//     const [sortOrder, setSortOrder] = useState("asc");
//     const [filter, setFilter] = useState("year");
//     const [selectedStatuses, setSelectedStatuses] = useState([]);
//     const [dropdownOpen, setDropdownOpen] = useState(false);

//     // const handleExport = async () => {
//     //     try {
//     //         const response = await fetch("https://hogist.com/food-api/export_b2b/", {
//     //             method: "GET",
//     //             headers: {
//     //                 "ngrok-skip-browser-warning": "true",
//     //             }
//     //         });

//     //         if (!response.ok) {
//     //             throw new Error("Failed to export file");
//     //         }

//     //         const blob = await response.blob();
//     //         const url = window.URL.createObjectURL(blob);
//     //         const a = document.createElement("a");
//     //         a.href = url;
//     //         a.download = "B2B_Leads.xlsx"; // or whatever name you want
//     //         document.body.appendChild(a);
//     //         a.click();
//     //         a.remove();
//     //         window.URL.revokeObjectURL(url);
//     //     } catch (error) {
//     //         console.error("Export error:", error); 
//     //         alert("Failed to download export file.");
//     //     }
//     // };

//     useEffect(() => {
//         const handleClickOutside = () => setDropdownOpen(false);
//         document.addEventListener("click", handleClickOutside);
//         return () => document.removeEventListener("click", handleClickOutside);
//     }, []);


//     const exportToExcel = (data, fileName = "ExportedData") => {
//         const worksheet = XLSX.utils.json_to_sheet(data);
//         const workbook = XLSX.utils.book_new();
//         XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");

//         const excelBuffer = XLSX.write(workbook, { bookType: "xlsx", type: "array" });
//         const dataBlob = new Blob([excelBuffer], { type: "application/octet-stream" });
//         saveAs(dataBlob, `${fileName}.xlsx`);
//     };

//     useEffect(() => {
//         const fetchData = async () => {
//             try {
//                 const response = await fetch("https://hogist.com/food-api/get_b2b/", {
//                     method: "GET",
//                     headers: {
//                         'Content-Type': 'application/json',
//                         "ngrok-skip-browser-warning": "true"
//                     },
//                 })
//                 const res = await response.json();
//                 console.log("FULL Response:", res);
//                 setTableData(Array.isArray(res) ? res : []);
//             } catch (err) {
//                 console.error("Error fetching data:", err);
//                 setError(err.message || "Failed to load data.");
//             }
//             finally {
//                 setLoading(false);
//             }
//         };
//         fetchData();
//     }, []);

//     if (loading) return <div className="flex justify-center items-center h-screen w-full">
//         <span className="loader"></span>
//     </div>
//     if (error) return <div className="flex justify-center items-center h-screen w-full">
//         <p className="text-center p-4 text-red-500 flex justify-center">{error}</p>
//     </div>

//     const handleSort = () => {
//         const sortedData = [...tableData].sort((a, b) => {
//             const scoreA = a.lead_score || 0;
//             const scoreB = b.lead_score || 0;
//             return sortOrder === "asc" ? scoreA - scoreB : scoreB - scoreA;
//         });
//         setTableData(sortedData);
//         setSortOrder(sortOrder === "asc" ? "desc" : "asc");
//     };

//     const filteredData = tableData.filter((row) => {
//         // Date filtering
//         const createdData = new Date(row.created_at);
//         const now = new Date();

//         let dateMatch = true;
//         if (filter === "today") {
//             dateMatch = createdData.toDateString() === now.toDateString();
//         }
//         else if (filter === "month") {
//             dateMatch = createdData.getMonth() === now.getMonth() && createdData.getFullYear() === now.getFullYear();
//         }
//         else if (filter === "year") {
//             dateMatch = createdData.getFullYear() === now.getFullYear();
//         }

//         // Status filtering
//         let statusMatch = true;
//         if (selectedStatuses.length > 0) {
//             statusMatch = selectedStatuses.includes(row.lead_status?.toLowerCase());
//         }

//         return dateMatch && statusMatch;
//     });

//     const getStatusBadge = (status) => {
//         let baseClass = "text-white px-4 py-1 rounded-full text-xs font-semibold capitalize";
//         switch (status?.toLowerCase()) {
//             case "cold":
//                 return <span className={`${baseClass} bg-red-700 `}>Cold</span>;
//             case "warm":
//                 return <span className={`${baseClass} bg-orange-400`}>Warm</span>;
//             case "hot":
//                 return <span className={`${baseClass} bg-green-600`}>Hot</span>;
//             case "not interested":
//                 return <span className={`${baseClass} bg-gray-500`}>Not Interested</span>;
//             default:
//                 return <span className={`${baseClass} bg-gray-600`}>N/A</span>;
//         }
//     };

//     const headers = [
//         "Name",
//         "Contact Number",
//         "Alternate Number",
//         "Email",
//         "Event Type",
//         "Company Name",
//         "Designation",
//         "Delivery Location",
//         "Count",
//         "Required Meal Service",
//         "Dietary Options",
//         "Service Type",
//         "Service Choice",
//         "Choice of Menu",
//         "Existing Budget",
//         "Preferred Budget",
//         "Meeting Date",
//         "Lead Status",
//         "Status",
//         "Remark",
//         "Created At",
//         "Lead Score",
//         "Call ID"
//     ];

//     return (
//         <div className="px-4 pt-5 ibm">
//             <h1 className="font-bold text-4xl text-green-600 text-center py-5">B2B</h1>
//             <div className="flex flex-wrap items-center gap-4 mb-4">
//                 <button
//                     onClick={() => exportToExcel(filteredData, "B2C_Leads")}
//                     className="bg-green-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-green-700"
//                 >
//                     Export file
//                 </button>

//                 <select
//                     value={filter}
//                     onChange={(e) => setFilter(e.target.value)}
//                     className="cursor-pointer rounded border border-white py-2 px-4"
//                 >
//                     <option value="year" className="bg-black">This Year</option>
//                     <option value="month" className="bg-black">This Month</option>
//                     <option value="today" className="bg-black">Today</option>
//                 </select>
//             </div>

//             <div className="overflow-x-auto">
//                 <div className="h-[73vh] border border-gray-300 overflow-y-auto">
//                     <table className="w-full min-w-[1200px] ">
//                         <thead className="bg-gray-200 sticky top-0 z-10">
//                             <tr>
//                                 {headers.map((header, index) => (
//                                     <th key={index} className="px-3 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider whitespace-nowrap">
//                                         <div className="flex items-center">
//                                             {header}
//                                             {header === "Lead Score" && (
//                                                 <button onClick={handleSort} className="ml-1 px-1">
//                                                     {sortOrder === "asc" ? <FaArrowDown /> : <FaArrowUp />}
//                                                 </button>
//                                             )}
//                                             {header === "Lead Status" && (
//                                                 <div className="relative ml-2" onClick={(e) => e.stopPropagation()}>
//                                                     <button
//                                                         className=""
//                                                         onClick={() => setDropdownOpen(!dropdownOpen)}
//                                                     >
//                                                         <FaFilter />
//                                                     </button>
//                                                     {dropdownOpen && (
//                                                         <div className="absolute z-20 mt-2 w-48 bg-white border border-gray-300 rounded shadow p-2">
//                                                             {["hot", "warm", "cold", "not interested"].map((status) => (
//                                                                 <label key={status} className="block text-sm capitalize">
//                                                                     <input
//                                                                         type="checkbox"
//                                                                         value={status}
//                                                                         className="mr-2"
//                                                                         checked={selectedStatuses.includes(status)}
//                                                                         onChange={(e) => {
//                                                                             const checked = e.target.checked;
//                                                                             setSelectedStatuses((prev) =>
//                                                                                 checked
//                                                                                     ? [...prev, status]
//                                                                                     : prev.filter((s) => s !== status)
//                                                                             );
//                                                                         }}
//                                                                     />
//                                                                     {status}
//                                                                 </label>
//                                                             ))}
//                                                             <div className="mt-2 text-right">
//                                                                 <button
//                                                                     className="text-xs text-blue-600 hover:underline"
//                                                                     onClick={() => setSelectedStatuses([])}
//                                                                 >
//                                                                     Clear All
//                                                                 </button>
//                                                             </div>
//                                                         </div>
//                                                     )}
//                                                 </div>
//                                             )}
//                                         </div>
//                                     </th>
//                                 ))}
//                             </tr>
//                         </thead>
//                         <tbody>
//                             {filteredData.length > 0 ? (
//                                 filteredData.map((row, index) => (
//                                     <tr key={index} className="hover:bg-gray-900 ">
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.name || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.contact_number}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.alternate_number || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.email || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.event_type || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.company_name || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.designation || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.delivery_location || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.count || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.required_meal_service || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.dietary_options || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.service_type || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.service_choice || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.choice_of_menu || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.existing_menu_budget || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.prefered_menu_budget || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.meeting_date_time ? new Date(row.meeting_date_time).toLocaleString() : "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{getStatusBadge(row.lead_status)}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">
//                                             <select
//                                                 value={row.status || ""}
//                                                 onChange={async (e) => {
//                                                     const newStatus = e.target.value;
//                                                     try {
//                                                         const response = await fetch(`https://hogist.com/food-api/update_status/${row.id}/`, {
//                                                             method: "PATCH",
//                                                             headers: {
//                                                                 "Content-Type": "application/json",
//                                                                 "ngrok-skip-browser-warning": "true",
//                                                             },
//                                                             body: JSON.stringify({ status: newStatus }),
//                                                         });

//                                                         if (!response.ok) throw new Error("Failed to update status");

//                                                         setTableData((prevData) =>
//                                                             prevData.map((item) =>
//                                                                 item.id === row.id ? { ...item, status: newStatus } : item
//                                                             )
//                                                         );
//                                                     } catch (err) {
//                                                         console.error("Update failed:", err);
//                                                         alert("Status update failed.");
//                                                     }
//                                                 }}
//                                                 className="bg-black text-white px-2 py-1 rounded"
//                                             >
//                                                 <option value="">{row.status}</option>
//                                                 <option value="Scheduled Meeting">Scheduled Meeting</option>
//                                                 <option value="Not Scheduled">Not Scheduled</option>
//                                                 <option value="Hold">Hold</option>
//                                                 <option value="Follow Up">Follow Up</option>
//                                                 <option value="Closed">Closed</option>
//                                             </select>
//                                         </td>

//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.remark || "N/A"}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{new Date(row.created_at).toLocaleString()}</td>
//                                         <td className="px-3 py-5 whitespace-nowrap text-sm">
//                                             <span className={`px-3 py-1 rounded-full text-white text-xs font-semibold
//                                                     ${row.lead_status?.toLowerCase() === 'hot' ? 'bg-green-600' :
//                                                     row.lead_status?.toLowerCase() === 'warm' ? 'bg-orange-400' :
//                                                         row.lead_status?.toLowerCase() === 'cold' ? 'bg-red-700' :
//                                                             row.lead_status?.toLowerCase() === 'not interested' ? 'bg-gray-500' :
//                                                                 'bg-gray-600'
//                                                 }`}>
//                                                 {row.lead_score !== undefined && row.lead_score !== null ? row.lead_score : "N/A"}
//                                             </span>
//                                         </td>

//                                         <td className="px-3 py-5 whitespace-nowrap text-sm text-gray-200">{row.call_id}</td>
//                                     </tr>
//                                 ))
//                             ) : (
//                                 <tr>
//                                     <td colSpan={23} className="text-center p-4 ">No data available</td>
//                                 </tr>
//                             )}
//                         </tbody>
//                     </table>
//                 </div>
//             </div>
//         </div>
//     );
// };